{"version":3,"sources":["images/bitcoin.png","components/Navbar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/News.jsx","components/HomePage.jsx","components/Exchanges.jsx","components/Linechart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Cryptocurrencies","simplified","searchTerm","setSearchTerm","cryptoList","data","isFetching","cryptos","setCryptos","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","hoverable","millify","price","marketCap","change","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Text","Typography","Option","Select","demoImage","News","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","i","href","rel","style","maxWidth","maxHeight","image","thumbnail","contentUrl","alt","description","length","substring","provider","moment","datePublished","startOf","fromNow","HomePage","globalStats","stats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimeperiod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","App","exact","path","color","textAlign","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9a058c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bitcoin.1548aced.png\";","import React, { useEffect, useState } from 'react'\r\nimport {Button, Typography, Avatar, Menu} from 'antd'\r\nimport {Link} from 'react-router-dom'\r\nimport {HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined} from '@ant-design/icons'\r\nimport icon from '../images/bitcoin.png'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const [activeMenu, setActiveMenu] = useState(true)\r\n    const [screenSize, setScreenSize] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth)\r\n        window.addEventListener('resize', handleResize)\r\n        handleResize()\r\n        return ()=> window.removeEventListener('resize', handleResize)\r\n    }, [])\r\n\r\n    useEffect(() =>{\r\n        if(screenSize <= 800){\r\n            setActiveMenu(false)\r\n        }else{\r\n            setActiveMenu(true)\r\n        }\r\n    },[screenSize])\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\"/>\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to='/'>Crypto</Link>\r\n                </Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick = {() => setActiveMenu(!activeMenu)}>\r\n                    <MenuOutlined />\r\n                </Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"dark\">\r\n                <Menu.Item icon={<HomeOutlined />}>\r\n                    <Link to='/'>Home</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<FundOutlined />}>\r\n                    <Link to='/cryptocurrencies'>Cryptocurrencies</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                    <Link to='/exchanges'>Exchanges</Link>\r\n                </Menu.Item>\r\n                <Menu.Item icon={<BulbOutlined />}>\r\n                    <Link to='/news'>News</Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoApiHeaders = {\r\n    'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n    'x-rapidapi-key': '6a3eb68abfmshe3fd2373137f18dp1939c6jsn86de745c8f5a' \r\n} \r\n\r\nconst baseUrl = 'https://coinranking1.p.rapidapi.com'\r\n\r\nconst createRequest = url => ({url, headers: cryptoApiHeaders})\r\n\r\nexport const cryptoApi = createApi({\r\n    reducerPath: 'cryptoApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptos: builder.query({\r\n            query: (count) => createRequest(`/coins?limit=${count}`),\r\n        }),\r\n        getCryptoDetails: builder.query({\r\n            query: (coinId) => createRequest(`/coin/${coinId}`),\r\n        }),\r\n        getCryptoHistory: builder.query({\r\n            query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\r\n        }),\r\n        getExchanges: builder.query({\r\n            query: () => createRequest('/exchanges'),\r\n        }),\r\n    })\r\n})\r\n\r\nexport const {\r\n    useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery, useGetExchangesQuery\r\n} = cryptoApi","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);","import React, {useEffect, useState} from 'react'\r\nimport millify from 'millify'\r\nimport {Link} from 'react-router-dom'\r\nimport {Card, Row, Col, Input} from 'antd'\r\nimport {useGetCryptosQuery} from '../services/cryptoApi'\r\nimport { Loader } from './Loader'\r\n\r\nexport const Cryptocurrencies = ({simplified}) => {\r\n\r\n    const count = simplified ? 10 : 100;\r\n\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    const {data: cryptoList, isFetching} = useGetCryptosQuery(count)\r\n\r\n    const [cryptos, setCryptos] = useState([])\r\n\r\n    useEffect(() => {\r\n        const filteredData = cryptoList?.data?.coins.filter(coin => coin.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n\r\n        setCryptos(filteredData)\r\n\r\n    }, [cryptoList, searchTerm])\r\n\r\n    if(isFetching) return <Loader />\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !simplified && (\r\n                    <div className=\"search-crypto\">\r\n                        <Input placeholder=\"Search Cryptocurrency\" onChange={e => setSearchTerm(e.target.value)}/>\r\n                    </div>\r\n                )\r\n            }\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map(currency => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`} >\r\n                            <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl} />} hoverable>\r\n                                <p>Price: {millify(currency.price)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': '6a3eb68abfmshe3fd2373137f18dp1939c6jsn86de745c8f5a'\r\n}\r\n\r\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com'\r\n\r\nconst createRequest = url => ({url, headers: cryptoNewsHeaders})\r\n\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({baseUrl}),\r\n    endpoints: (builder) => ({\r\n        getCryptoNews: builder.query({\r\n            query: ({newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\r\n        })\r\n    })\r\n})\r\n\r\nexport const {useGetCryptoNewsQuery} = cryptoNewsApi","import React, {useState} from 'react'\r\nimport {Select, Typography, Row, Col, Avatar, Card} from 'antd'\r\nimport moment from 'moment'\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi';\r\nimport { Loader } from './Loader'\r\n\r\nconst {Text, Title} = Typography\r\nconst {Option} = Select\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\r\n\r\nexport const News = ({simplified}) => {\r\n\r\n    const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\r\n  \r\n    const { data } = useGetCryptosQuery(100);\r\n\r\n    const {data: cryptoNews} = useGetCryptoNewsQuery({newsCategory, count: simplified ? 6 : 12})\r\n\r\n    if(!cryptoNews?.value) return <Loader />\r\n\r\n    return (\r\n        <Row gutter={[24, 24]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n          >\r\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\r\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews.value.map((news, i) => (\r\n        <Col xs={24} sm={12} lg={8} key={i}>\r\n          <Card hoverable className=\"news-card\">\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                <img style={{maxWidth: '100px', maxHeight: '100px'}} src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n              </div>\r\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                </div>\r\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport millify from 'millify'\r\nimport {Typography, Row, Col, Statistic} from 'antd'\r\nimport {Link} from 'react-router-dom'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport { Cryptocurrencies } from './Cryptocurrencies'\r\nimport {News} from './News'\r\nimport {Loader} from './Loader'\r\n\r\nexport const HomePage = () => {\r\n\r\n    const {data, isFetching} = useGetCryptosQuery(10)\r\n    const globalStats = data?.data?.stats;\r\n\r\n    if(isFetching) return <Loader />;\r\n\r\n    return (\r\n        <div>\r\n            <Typography.Title level={2} className=\"heading\">Global Crypto Stats</Typography.Title>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Statistic title='Total Cryptocurrencies' value={globalStats.total} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title='Total Exchanges' value={millify(globalStats.totalExchanges)} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title='Total Market Cap' value={millify(globalStats.totalMarketCap)} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title='Total 24h Volume' value={millify(globalStats.total24hVolume)} />\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Statistic title='Total Markets' value={millify(globalStats.totalMarkets)} />\r\n                </Col>\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Typography.Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Typography.Title>\r\n                <Typography.Title level={3} className=\"show-more\">\r\n                    <Link to=\"/cryptocurrencies\">Show more</Link>\r\n                </Typography.Title>\r\n            </div>\r\n            <Cryptocurrencies simplified/>\r\n            <div className=\"home-heading-container\">\r\n                <Typography.Title level={2} className=\"home-title\">Latest Crypto News</Typography.Title>\r\n                <Typography.Title level={3} className=\"show-more\">\r\n                    <Link to=\"/news\">Show more</Link>\r\n                </Typography.Title>\r\n            </div>\r\n            <News simplified/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport millify from 'millify';\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\r\nimport HTMLReactParser from 'html-react-parser';\r\n\r\nimport { useGetExchangesQuery } from '../services/cryptoApi';\r\nimport {Loader} from './Loader';\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nexport const Exchanges = () => {\r\n\r\n    const { data, isFetching } = useGetExchangesQuery();\r\n    const exchangesList = data?.data?.exchanges;\r\n\r\n    if (isFetching) return <Loader />;\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{exchange.rank}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                  )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\n\r\nconst { Title } = Typography;\r\n\r\nexport const LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In USD',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};","import React, {useState} from 'react'\r\nimport HTMLReactParser from 'html-react-parser'\r\nimport { useParams } from 'react-router-dom'\r\nimport millify from 'millify'\r\nimport {Row, Col, Typography, Select} from 'antd'\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\r\nimport {Loader} from './Loader';\r\nimport { LineChart } from './Linechart'\r\n\r\nconst {Title, Text} = Typography\r\nconst {Option} = Select\r\n\r\nexport const CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timeperiod, setTimeperiod] = useState('7d');\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  const time = ['3h', '24h', '7d', '30d', '3m', '1y', '3y', '5y'];\r\n\r\n  const stats = [\r\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n  ];\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n  ];\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\r\n      </Col>\r\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\r\n        {time.map((date) => <Option key={date}>{date}</Option>)}\r\n      </Select>\r\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">{link.type}</Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  );\r\n};\r\n","import {Switch, Route, Link} from 'react-router-dom'\nimport {Layout, Typography, Space} from 'antd'\nimport { Navbar } from './components/Navbar';\nimport './App.css'\nimport { HomePage } from './components/HomePage';\nimport { Exchanges } from './components/Exchanges';\nimport { Cryptocurrencies } from './components/Cryptocurrencies';\nimport { News } from './components/News';\nimport { CryptoDetails } from './components/CryptoDetails';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePage />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/cryptocurrencies\">\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <div className=\"footer\">\n          <Typography.Title level={5} style={{color: 'white', textAlign: 'center'}}>\n            Crypto <br/>\n            All rights reserved.\n          </Typography.Title>\n          <Space>\n            <Link to='/'>Home</Link>\n            <Link to='/exchanges'>Exchanges</Link>\n            <Link to='/news'>News</Link>\n          </Space>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport {cryptoApi} from '../services/cryptoApi'\r\nimport { cryptoNewsApi } from '../services/cryptoNewsApi'\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport 'antd/dist/antd.css'\nimport {store} from './app/store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}